<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Periklis Gkolias on Bitperi(Periklis Gkolias)</title>
    <link>https://perigk.github.io/author/periklis-gkolias/</link>
    <description>Recent content in Periklis Gkolias on Bitperi(Periklis Gkolias)</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 10 Dec 2019 17:07:57 +0200</lastBuildDate>
    
	<atom:link href="https://perigk.github.io/author/periklis-gkolias/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>30 Tips for Software Engineering Careers, After 30 Years of Life</title>
      <link>https://perigk.github.io/posts/30-tips-for-software-engineering-careers-30-years-of-life/</link>
      <pubDate>Tue, 10 Dec 2019 17:07:57 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/30-tips-for-software-engineering-careers-30-years-of-life/</guid>
      <description>I turned 30, a few days ago. An interesting decade, where I did and learned a lot of things came to an end. I tend to keep track of such &amp;ldquo;life lessons&amp;rdquo;, so I thought it would be a good idea to publicize the most related to our work life as software engineers.
Here we go:
1. Work really hard No one will grant you a promotion, salary increase or a better position for nothing.</description>
    </item>
    
    <item>
      <title>A Primer on Python Partial Functions</title>
      <link>https://perigk.github.io/posts/a-primer-on-partial-functions/</link>
      <pubDate>Sun, 24 Nov 2019 22:04:50 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/a-primer-on-partial-functions/</guid>
      <description>Partial functions are one of the most &amp;ldquo;terrifying concepts&amp;rdquo; I hear people talking about. Personally, I think the idea is fairly easy to grasp. That is, I will try to explain in a few paragraphs with python and help you escape the math labyrinth of &amp;ldquo;official documentation&amp;rdquo;.
What is a partial function Partial functions are a computer science concept where we can derive a function with x parameters to a function with fewer parameters and constant values set for the more limited function.</description>
    </item>
    
    <item>
      <title>Oh Podcasts, Why Do You Have to Suck</title>
      <link>https://perigk.github.io/posts/podcasts-why-do-you-have-to-suck/</link>
      <pubDate>Fri, 13 Sep 2019 23:08:45 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/podcasts-why-do-you-have-to-suck/</guid>
      <description>I find podcasts extremely overrated. Yeap, I know this is an extremely selfish and biased opinion, especially given the popularity of this &amp;ldquo;means of entertainment&amp;rdquo;.
But on the other hand, most things that suck have traction. I can&amp;rsquo;t recall something that was super ugly and didn&amp;rsquo;t have fanatic and passionate friends.
I will try to explain my view.
Bad equipment Too many podcasts have bad equipment. I find it extremely disrespectful and annoying to hear only half of what is discussed, due to low quality microphones.</description>
    </item>
    
    <item>
      <title>Generate cooking recipes that guarantee food poisoning, with LSTM based libraries</title>
      <link>https://perigk.github.io/posts/generate-cooking-recipes/</link>
      <pubDate>Mon, 01 Jul 2019 14:28:24 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/generate-cooking-recipes/</guid>
      <description>Unless you are living in the Amazonian forest with no access to the Internet, there is literally no chance that you have not heard about the Deep Learning boom, of the last few years.
Training neural networks, that can make decisions, distinguish fake images or generate fake videos, in a relatively short time is becoming the norm.
It doesn&amp;rsquo;t all have to be scary though. Sometimes you can just have fun with all that power.</description>
    </item>
    
    <item>
      <title>A quick way to automate your conda uninstalls</title>
      <link>https://perigk.github.io/post/conda-uninstall/</link>
      <pubDate>Sat, 01 Jun 2019 00:07:15 +0300</pubDate>
      
      <guid>https://perigk.github.io/post/conda-uninstall/</guid>
      <description>It&amp;rsquo;s been a while since my last article, truth be told it was an over-demanding set of months for me and not only in my professional life. One of the best things though, I have done during this past period was to submit a chapter to First year in code (Thanks Isaac for the opportunity :) )
Today, I am gonna showcase a python script I made, to help you uninstall all the anaconda packages that match a certain filter.</description>
    </item>
    
    <item>
      <title>I just finished Code complete cover to cover. Here are the most unexpected things I learned</title>
      <link>https://perigk.github.io/posts/code-complete-cover-to-cover/</link>
      <pubDate>Tue, 26 Mar 2019 21:55:08 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/code-complete-cover-to-cover/</guid>
      <description>I got code complete several years ago. Actually, it was a graduation gift.
I sometimes peaked into some of its chapters but never thought I was able to read it all at once. It was like a superhuman task for me.
Until this year, where I decided, in the game of no excuses, to play hard. One of the battles I chose to give was to finish the book.</description>
    </item>
    
    <item>
      <title>The Devops Introduction I Wish I Had</title>
      <link>https://perigk.github.io/posts/the-devops-introduction-i-wish-i-had/</link>
      <pubDate>Mon, 11 Mar 2019 16:41:43 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/the-devops-introduction-i-wish-i-had/</guid>
      <description>Buzzwords are everywhere. You may have noticed that I am not a big fan of them. They are used everywhere (sometimes in a wrong fashion) and because of that, most people afraid to ask the 101-questions as they don&amp;rsquo;t want to sound ignorant.
Some years ago, my back-then-manager asked me if I wanted to do some devops work as part of my software engineer job. Of course, I was young and afraid (for the above reasons) to ask so I just said &amp;ldquo;yeah, let&amp;rsquo;s give it a try.</description>
    </item>
    
    <item>
      <title>Dear Technical Recruiter...</title>
      <link>https://perigk.github.io/posts/dear-technical-recruiter/</link>
      <pubDate>Tue, 05 Mar 2019 19:08:57 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/dear-technical-recruiter/</guid>
      <description>I like you. I really do. I understand that not all my colleagues feel the same way but I have positive feelings for the work you do.
I understand the value of doing a good match between a company and the various candidates. It is a very old problem (not only in modern workplace) which needs solution, thus every help is acceptable.
Though, you seriously need to&amp;hellip;
Stop asking for excellent knowledge Yeap, I said it.</description>
    </item>
    
    <item>
      <title>Devops and Infrastructure for the Solo Dev</title>
      <link>https://perigk.github.io/posts/devops-and-infrastructure-for-the-solo-dev/</link>
      <pubDate>Sat, 26 Jan 2019 19:18:42 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/devops-and-infrastructure-for-the-solo-dev/</guid>
      <description>Being solo doesn&amp;rsquo;t mean your infrastructure and operations has to suck. Sadly, in teams of one (and small teams in general), people being physically or emotionally close (eg friends in life, business partners) can be a great excuse to ignore this important part of your day-to-day.
You could find a ton of reasons to invest in a DevOps infrastructure, but the two most important for me are
It will save your arse in the long run So you are having a demo tomorrow to your only client or to a very significant stakeholder in your company.</description>
    </item>
    
    <item>
      <title>Code Review for the Solo Dev</title>
      <link>https://perigk.github.io/posts/code-review-for-the-solo-dev/</link>
      <pubDate>Mon, 31 Dec 2018 14:39:07 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/code-review-for-the-solo-dev/</guid>
      <description>I will start this article, as I did with the previous one in the series.
Nothing can substitute a great team. But a real warrior has to be able to rely on thyself if needed.
A few people nowadays, work on a team of one.
People that are subject matter experts and the very best on their fields (and I am the last human on earth who can give them any professional advice).</description>
    </item>
    
    <item>
      <title>Asyncio, the invincible</title>
      <link>https://perigk.github.io/posts/asyncio-the-invincible/</link>
      <pubDate>Thu, 20 Dec 2018 23:03:29 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/asyncio-the-invincible/</guid>
      <description>TL;DR / Intro Async programming is the new sexy when it comes to multitasking. It became famous with NodeJS but you can find libraries that support it in most major languages.
For example in Python, the two most famous approaches are the usage of Tornado Web Server and the built-in library asyncio. For today we will do an introduction to the latter, as it has gone through tons of iterations and improvements lately and it is ready to charm people with its intuitive approach.</description>
    </item>
    
    <item>
      <title>Self Testing for Solo Devs</title>
      <link>https://perigk.github.io/posts/self-testing-for-solo-devs/</link>
      <pubDate>Thu, 15 Nov 2018 22:48:56 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/self-testing-for-solo-devs/</guid>
      <description>Nothing can substitute a great team. But a real warrior, has to be able to rely on thyself, if needed.
A few people nowadays, work on a team of one.
People that are subject matter experts and the very best on their fields (and I am the last human on earth who can give them any professional advice).
People that have just founded, solo, their own company (or their company partners are not technical).</description>
    </item>
    
    <item>
      <title>How to Survive a Noisy Office Environment</title>
      <link>https://perigk.github.io/posts/how-to-survive-noisy-office/</link>
      <pubDate>Tue, 30 Oct 2018 23:03:29 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/how-to-survive-noisy-office/</guid>
      <description>It is the most accepted fact after the great taste of ice-cream. Software engineers absolutely hate open plans or open offices.
They are noisy and tight, distracting, nerve breaking and the last thing they do is to help yu enter a state of flow. Unless you are lucky and your colleagues know the pain and behave accordingly.
Unfortunately, the open office, is an inevitable resource of our day to day work and it will be for the next few years, even though there are tons of voices against.</description>
    </item>
    
    <item>
      <title>Web Assembly for Buzzword Haters</title>
      <link>https://perigk.github.io/posts/web-assembly-for-buzzword-haters/</link>
      <pubDate>Sun, 14 Oct 2018 20:05:29 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/web-assembly-for-buzzword-haters/</guid>
      <description>Web assembly looks like the next best thing in web technologies. Even though the first release happened fairly recently, namely in early 2017, there were rumors and anticipation long ago. With a quick google searching, I found this HackerNews article, almost 3 years ago, for example.
So what is all the hype about WebAssembly? As with all new(and promising) technologies, there is information overload in the air, I made a compact FAQ to help you get up to speed with this new kid in the town</description>
    </item>
    
    <item>
      <title>The Definite Guide to Pick the Correct Music While Working</title>
      <link>https://perigk.github.io/posts/the-definite-guide-to-pick-the-correct-music-while-working/</link>
      <pubDate>Mon, 27 Aug 2018 19:08:34 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/the-definite-guide-to-pick-the-correct-music-while-working/</guid>
      <description>I only know few semi-god-concentration-giants who don&amp;rsquo;t work with headphones, while being productive at their company&amp;rsquo;s -usually noisy- office and I really admire them.
For the rest of us co-mortals, we need our headphones/earphones, to make it through. But have you ever thought, what should you listen to, at work? And I mean, in terms of best value regarding your current state.
Below are some hints, about how you should pick the sound that will entertain your ears.</description>
    </item>
    
    <item>
      <title>The Incredible Hulk(ython): Making Python Strong(ly Typed)</title>
      <link>https://perigk.github.io/posts/the-incredible-hulkython-making-python-strongly-typed/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://perigk.github.io/posts/the-incredible-hulkython-making-python-strongly-typed/</guid>
      <description>Python is a wonderful dynamically typed language, but quite a few people consider this as its biggest disadvantage.
But why? Even though dynamically typed languages, remove the headache of writing &amp;ldquo;mundane&amp;rdquo; type declarations and make writing more pleasant and a little bit faster, this need is just delegated to the runtime environment of the language.
That means, that some bugs that could have been eliminated, almost immediately after they are introduced, they will now remain silent till the code is invoked, And you know when this is going to happen, right?</description>
    </item>
    
    <item>
      <title>Stepping up your javascript debugging skills</title>
      <link>https://perigk.github.io/posts/stepping-up-your-javascript-debugging-skills/</link>
      <pubDate>Mon, 25 Jun 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/stepping-up-your-javascript-debugging-skills/</guid>
      <description>Almost all software developers, who have written even a few lines of code for the Web, had at least a quick glance at javascript in their life, which is one of the most in-demand programming languages currently.
Some people love it, some hate it. Regardless of your view, if you use it, you will need to debug it eventually.
Below I will share some tips that help me in those difficult moments.</description>
    </item>
    
    <item>
      <title>Django by example(Antonio Mele) - book review</title>
      <link>https://perigk.github.io/posts/django-example-book-review/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/django-example-book-review/</guid>
      <description>Disclaimer: At the time of starting to write this article, the next version of the book under review, has not been published yet. If you want to read the newest version, you can find it here
Many people don&amp;rsquo;t have enough time to research for a book. I think such articles could help people, accelerate their (correct)decision.
That&amp;rsquo;s why I decided to write this article. This is a quick and dense review of Django by example by Antonio Mele</description>
    </item>
    
    <item>
      <title>Doctests, the shy giant of testing modules</title>
      <link>https://perigk.github.io/posts/doctests-the/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/doctests-the/</guid>
      <description>Do you use python, even to wash your clothes? Do you find unit testing boring, but still have to do it, because you find value in automated testing? Then this article is for you.
The idea I believe you have used the python console, from time to time. Lets assume you are writing a few inline functions like below, to experiment with stuff:
$ python Python 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 18:10:19) [GCC 7.</description>
    </item>
    
    <item>
      <title>The art of leveraging time</title>
      <link>https://perigk.github.io/posts/the-art-of-leveraging-time/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/the-art-of-leveraging-time/</guid>
      <description>Oh dear, if I had a dime, every time(oh just made a rhime, twice :D) someone complained to me about the lack of time. Even if that guy is&amp;hellip;myself. Life is a bi..h, according to folk wisdom, but if it is &amp;ldquo;fair and square&amp;rdquo; with one thing it is time.
We all have 24h per day to achieve our goals, complete our personal and professional tasks, spend quality time with our family and friends, take care of our bodies and so much more.</description>
    </item>
    
    <item>
      <title>How being lazy, led me to publicize my first python package</title>
      <link>https://perigk.github.io/posts/how-being-lazy-led-me-to-publicize-my-first-python-package/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/how-being-lazy-led-me-to-publicize-my-first-python-package/</guid>
      <description>How being lazy, led me to publicize my first python package There is a common saying, in the software industry, which goes like:
 I want to hire a lazy developer because he will find the way to deal with difficult problems in the shortest and easiest manner.
 I wasn’t there the first time this was told, but rumors say that these words belong to Bill Gates.
I don’t know if Mr Gates would ever hire me(wink wink) but I have to admit that having that kind of laziness, has led me, from time to time, to create interesting and time saving libraries/scripts/workarounds.</description>
    </item>
    
    <item>
      <title>Must-read books for software engineers - the alternative list</title>
      <link>https://perigk.github.io/posts/hidden-gem-books-all-software-engineers-should-check/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/hidden-gem-books-all-software-engineers-should-check/</guid>
      <description>There are tons of great books out there and a gazillion articles recommending them. The purpose of this article is not to recommend them again; I am pretty certain, that all such lists are very easy to be found with a few Google searches and no one needs me to tell him, that Code Complete is a must-read.
Thus, I&amp;rsquo;m going to list some books that are not very&amp;hellip;popular, but they are totally worth reading.</description>
    </item>
    
    <item>
      <title>How to get familiar with a new codebase</title>
      <link>https://perigk.github.io/posts/how-to-get-familiar-with-a-new-codebase/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0300</pubDate>
      
      <guid>https://perigk.github.io/posts/how-to-get-familiar-with-a-new-codebase/</guid>
      <description>Most of us, quite often, are in need to familiarize with a new code base. You might be an avid open source guy/girl who wants to contribute to another project, or you just started a new job, and you want to familiarize with the platform that will be a big part of your life, during the next months/years&amp;hellip;or just for fun, because who&amp;rsquo;s watching comedies nowadays?
Familiarizing with a new code base is a keystone skill, every software engineer should acquire on this beautiful planet.</description>
    </item>
    
    <item>
      <title>Fantastic youtube channels, with top-quality learning for software engineers</title>
      <link>https://perigk.github.io/posts/fantastic-youtube-channels-with-high-quality-learning-for-developers/</link>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/fantastic-youtube-channels-with-high-quality-learning-for-developers/</guid>
      <description>Video training is undeniably one of the most popular methods, for self-taught programmers and according to Forbes, the most popular, amongst millennials.
 Anyone who stops learning is old, whether at twenty or eighty. Anyone who keeps learning stays young. The greatest thing in life is to keep your mind young. (Henry Ford)
 As far as I know, many people are relying on one or more of the most popular video training platforms like Pluralsight, Udemy or Coursera but they use accounts funded by the company they are working for.</description>
    </item>
    
    <item>
      <title>A Comprehensive Guide to Unit Testing with Python3</title>
      <link>https://perigk.github.io/posts/a-comprehensive-guide-to-unit-testing/</link>
      <pubDate>Tue, 30 Jan 2018 17:05:18 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/a-comprehensive-guide-to-unit-testing/</guid>
      <description>A comprehensive introduction to unit-testing and mocking with Python3 Unit testing is quickly becoming a must for all job adverts. There are a few people who don’t like Test Driven Development(TDD), but at least they agree on the value, automation testing(not only unit tests) add to the overall code quality and to the debugging process.
By the time of writing, according to dice.com, TDD is enjoying increased popularity year after year.</description>
    </item>
    
  </channel>
</rss>