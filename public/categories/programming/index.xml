<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Bitperi(Periklis Gkolias)</title>
    <link>https://perigk.github.io/categories/programming/</link>
    <description>Recent content in Programming on Bitperi(Periklis Gkolias)</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 06 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://perigk.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Incredible Hulk(ython): Making Python Strong(ly Typed)</title>
      <link>https://perigk.github.io/posts/the-incredible-hulkython-making-python-strongly-typed/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://perigk.github.io/posts/the-incredible-hulkython-making-python-strongly-typed/</guid>
      <description>Python is a wonderful dynamically typed language, but quite a few people consider this as its biggest disadvantage.
But why? Even though dynamically typed languages, remove the headache of writing &amp;ldquo;mundane&amp;rdquo; type declarations and make writing more pleasant and a little bit faster, this need is just delegated to the runtime environment of the language.
That means, that some bugs that could have been eliminated, almost immediately after they are introduced, they will now remain silent till the code is invoked, And you know when this is going to happen, right?</description>
    </item>
    
    <item>
      <title>A1 comprehensive introduction to unit-testing and mocking with Python3</title>
      <link>https://perigk.github.io/posts/a-comprehensive-introduction-to-unit-testing-and-mocking-with-python3/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0200</pubDate>
      
      <guid>https://perigk.github.io/posts/a-comprehensive-introduction-to-unit-testing-and-mocking-with-python3/</guid>
      <description>Unit testing is quickly becoming a must for all job adverts. There are a few people who don&amp;rsquo;t like Test Driven Development(TDD), but at least they agree on the value, automation testing(not only unit tests) add to the overall code quality and to the debugging process.
By the time of writing, according to dice.com, TDD is enjoying increased popularity year after year.
Without further ado, let&amp;rsquo;s start our journey. You can download the source code from here</description>
    </item>
    
  </channel>
</rss>